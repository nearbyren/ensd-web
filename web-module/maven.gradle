apply plugin: 'maven-publish'

// 上传代码到maven仓库
afterEvaluate {
    publishing {
        // 配置maven仓库 仓库地址可配置多个 执行publish任务时 会把aar包发步到所有指定的maven仓库
        repositories { RepositoryHandler handler ->
            if (!isRemoteAar.toBoolean()) {
                //执行命令 右侧 gradle -> xxx-xxx[common-module] -> Tasks -> publishing -> publish
                // 指定路径的本地仓库
                handler.maven {url "${rootDir}/repo" }
                println("指定路径的本地仓库：[${rootDir}/repo]")
            } else {
                maven {
                    url "https://gitlab.ejiayou.com/api/v4/projects/578/packages/maven"
                    credentials(HttpHeaderCredentials) {
                        name = 'Deploy-Token'
                        value = 'NyHu_b5KQ9qRva6MU2J6'
                    }
                    authentication {
                        header(HttpHeaderAuthentication)
                    }
                }
            }
        }

        // 配置发布产物
        publications {

            // Creates a Maven publication called "release".
            release(MavenPublication) {

                // Applies the component for the release build variant.
                from components.release
                artifact sourceJar // 上传源码
                // Library Package Name (Example : "com.xxx.lib")
                // NOTE : Different GroupId For Each Library / Module, So That Each Library Is Not Overwritten
                groupId = 'ejiayou.web.module'

                // Library Name / Module Name (Example : "androidfirstlib")
                // NOTE : Different ArtifactId For Each Library / Module, So That Each Library Is Not Overwritten
                artifactId = 'web-module'

                // Version Library Name (Example : "1.0.0")
                version = '1.0.0'

                //指定路径 share_export-release.aar
//                artifact "build/outputs/aar/${project.getName()}-release.aar"
            }
        }
    }
}

// 上传源码的task
task sourceJar(type: Jar) {
    println("上传代码到maven仓库源码路径：${android.sourceSets.main.java.getSrcDirs()}")
    from android.sourceSets.main.java.getSrcDirs() // 源码路径
    archiveClassifier = "sources"
}
