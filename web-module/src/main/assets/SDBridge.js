/*! For license information please see SDBridge.js.LICENSE.txt */
(()=>{var __webpack_modules__={974:module=>{var factory;self,factory=()=>(()=>{var __webpack_modules__={"./src/index.js":(__unused_webpack_module,exports)=>{eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction addBridgeForAndroidWebView() {\n    if (window.WebViewJavascriptBridge) {\n        return;\n    }\n    window.WebViewJavascriptBridge = {\n        registerHandler: registerHandler,\n        callHandler: callHandler,\n        handleMessageFromNative: handleMessageFromNative\n    };\n    let messageHandlers = {};\n    let responseCallbacks = {};\n    let uniqueId = 1;\n    function registerHandler(handlerName, handler) {\n        messageHandlers[handlerName] = handler;\n    }\n    function callHandler(handlerName, data, responseCallback) {\n        if (arguments.length === 2 && typeof data == 'function') {\n            responseCallback = data;\n            data = null;\n        }\n        doSend({ handlerName:handlerName, data:data }, responseCallback);\n    }\n    function doSend(message, responseCallback) {\n        if (responseCallback) {\n            const callbackId = 'cb_'+(uniqueId++)+'_'+new Date().getTime();\n            responseCallbacks[callbackId] = responseCallback;\n            message['callbackId'] = callbackId;\n        }\n        window.normalPipe.postMessage(JSON.stringify(message));\n    }\n    function handleMessageFromNative(messageJSON) {\n        const message = JSON.parse(messageJSON);\n        let responseCallback;\n        if (message.responseId) {\n            responseCallback = responseCallbacks[message.responseId];\n            if (!responseCallback) {\n                return;\n            }\n            responseCallback(message.responseData);\n            delete responseCallbacks[message.responseId];\n        } else {\n            if (message.callbackId) {\n                const callbackResponseId = message.callbackId;\n                responseCallback = function(responseData) {\n                    doSend({ handlerName:message.handlerName, responseId:callbackResponseId, responseData:responseData });\n                };\n            }\n            const handler = messageHandlers[message.handlerName];\n            if (!handler) {\n                console.log(\"WebViewJavascriptBridge: WARNING: no handler for message from Kotlin:\", message);\n            } else {\n                handler(message.data, responseCallback);\n            }\n        }\n    }\n}\nexports.addBridgeForAndroidWebView = addBridgeForAndroidWebView;\n\n\n\n//# sourceURL=webpack://wk_utils/./src/index.js?")}},__webpack_exports__={};return __webpack_modules__["./src/index.js"](0,__webpack_exports__),__webpack_exports__})(),module.exports=factory()},502:function(e,n,a){"use strict";var r=this&&this.__awaiter||function(e,n,a,r){return new(a||(a=Promise))((function(s,o){function t(e){try{c(r.next(e))}catch(e){o(e)}}function l(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var n;e.done?s(e.value):(n=e.value,n instanceof a?n:new a((function(e){e(n)}))).then(t,l)}c((r=r.apply(e,n||[])).next())}))},s=this&&this.__generator||function(e,n){var a,r,s,o,t={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;t;)try{if(a=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return t.label++,{value:o[1],done:!1};case 5:t.label++,r=o[1],o=[0];continue;case 7:o=t.ops.pop(),t.trys.pop();continue;default:if(!((s=(s=t.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){t=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){t.label=o[1];break}if(6===o[0]&&t.label<s[1]){t.label=s[1],s=o;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(o);break}s[2]&&t.ops.pop(),t.trys.pop();continue}o=n.call(e,t)}catch(e){o=[6,e],r=0}finally{a=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}};n.__esModule=!0;var o=a(974);r(void 0,void 0,void 0,(function(){var e;return s(this,(function(n){return(e=window.WebViewJavascriptBridge)?console.log("window.WebViewJavascriptBridge 挂载成功！！"):(console.log("window.WebViewJavascriptBridge 没有挂载成功！！,TS正在尝试挂载"),console.log("TypeScript正在尝试挂载"),(0,o.addBridgeForAndroidWebView)(),(e=window.WebViewJavascriptBridge)&&console.log("window.WebViewJavascriptBridge, 已经被TypeScript挂载成功！！")),e.callHandler("DeviceLoadJavascriptSuccess",{key:"JSValue"},(function(e){var n=e.result;"iOS"===n?(console.log("Javascript was loaded by IOS and successfully loaded."),window.iOSLoadJSSuccess=!0):"Android"===n&&(console.log("Javascript was loaded by Android and successfully loaded."),window.AndroidLoadJSSuccess=!0)})),e.registerHandler("GetToken",(function(e,n){n({token:"I am javascript's token"})})),e.registerHandler("AsyncCall",(function(e,n){r(this,void 0,void 0,(function(){var e;return s(this,(function(a){switch(a.label){case 0:return[4,new Promise((function(e){setTimeout((function(){e("Javascript async/await callback Ok")}),1e3)}))];case 1:return e=a.sent(),n({token:e}),[2]}}))}))})),[2]}))}))}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var a=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(a.exports,a,a.exports,__webpack_require__),a.exports}var __webpack_exports__=__webpack_require__(502)})();